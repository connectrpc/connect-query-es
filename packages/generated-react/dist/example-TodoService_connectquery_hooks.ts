// @generated by protoc-gen-connect-query-with-hooks v0.0.1 with parameter "target=ts,import-hook-from=@tanstack/react-query"
// @generated from file example.proto (package buf.connect.demo.example.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { addTodo, delete$, getTodos, valueOf$ } from "./example-TodoService_connectquery.ts";
import { useInfiniteQuery, useMutation, useQuery } from "@tanstack/react-query";

/**
 * A helpful RPC to get all current Todos
 *
 * @generated from rpc buf.connect.demo.example.v1.TodoService.GetTodos
 */
export const useGetTodosQuery = 
  (...inputs: Parameters<typeof getTodos.useQuery>) => useQuery(getTodos.useQuery(inputs));

export const useGetTodosMutation = 
  (...inputs: Parameters<typeof getTodos.useMutation>) => useMutation(getTodos.useMutation(inputs));

export const useGetTodosInfiniteQuery = 
  (...inputs: Parameters<typeof getTodos.useInfiniteQuery>) => useInfiniteQuery(getTodos.useInfiniteQuery(inputs));

/**
 * @generated from rpc buf.connect.demo.example.v1.TodoService.AddTodo
 */
export const useAddTodoQuery = 
  (...inputs: Parameters<typeof addTodo.useQuery>) => useQuery(addTodo.useQuery(inputs));

export const useAddTodoMutation = 
  (...inputs: Parameters<typeof addTodo.useMutation>) => useMutation(addTodo.useMutation(inputs));

export const useAddTodoInfiniteQuery = 
  (...inputs: Parameters<typeof addTodo.useInfiniteQuery>) => useInfiniteQuery(addTodo.useInfiniteQuery(inputs));

/**
 * this RPC exists to test how JavaScript reserved keywords are translated
 *
 * @generated from rpc buf.connect.demo.example.v1.TodoService.Delete
 */
export const useDelete$Query = 
  (...inputs: Parameters<typeof delete$.useQuery>) => useQuery(delete$.useQuery(inputs));

export const useDelete$Mutation = 
  (...inputs: Parameters<typeof delete$.useMutation>) => useMutation(delete$.useMutation(inputs));

export const useDelete$InfiniteQuery = 
  (...inputs: Parameters<typeof delete$.useInfiniteQuery>) => useInfiniteQuery(delete$.useInfiniteQuery(inputs));

/**
 * this RPC exists to test how JavaScript reserved object properties are translated
 *
 * @generated from rpc buf.connect.demo.example.v1.TodoService.ValueOf
 */
export const useValueOf$Query = 
  (...inputs: Parameters<typeof valueOf$.useQuery>) => useQuery(valueOf$.useQuery(inputs));

export const useValueOf$Mutation = 
  (...inputs: Parameters<typeof valueOf$.useMutation>) => useMutation(valueOf$.useMutation(inputs));

export const useValueOf$InfiniteQuery = 
  (...inputs: Parameters<typeof valueOf$.useInfiniteQuery>) => useInfiniteQuery(valueOf$.useInfiniteQuery(inputs));
